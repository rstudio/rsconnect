[{"path":"https://rstudio.github.io/rsconnect/dev/RELEASE.html","id":"release-instructions","dir":"","previous_headings":"","what":"Release instructions","title":"NA","text":"Create release issue : Run noSuggests test:","code":"usethis::use_release_issue() rhub::rhub_check(platforms=\"nosuggests\")"},{"path":"https://rstudio.github.io/rsconnect/dev/articles/custom-http.html","id":"rsconnect_profile","dir":"Articles","previous_headings":"","what":".rsconnect_profile","title":"Customising HTTP requests","text":"deploying content RStudio IDE, rsconnect package’s deployment methods executed vanilla R session doesn’t execute startup scripts. can make challenging ensure options set properly prior push-button deployment, rsconnect package parallel set “startup” scripts runs prior deploying. following run order, exist, prior deployment: $R_HOME/etc/rsconnect.site: Like Rprofile.site site-wide pre-flight options. typically used system administrators. ~/.rsconnect_profile, like .Rprofile; affect apps deploy. .rsconnect_profile, like .Rprofile; affect current app. Unlike .Rprofile, ~/.rsconnect_profile, present, also run.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/articles/custom-http.html","id":"http-proxy-environment-variable","dir":"Articles","previous_headings":"","what":"HTTP Proxy Environment Variable","title":"Customising HTTP requests","text":"straightforward way specify proxy set HTTPS_PROXY environment variable. example, add following code .rsconnect_profile: Proxy settings can include host-name, port, username/password necessary. following valid values http_proxy environment variable: http://proxy.example.com/ http://proxy.example.com:1080/ http://username:password@proxy.example.com:1080/","code":"Sys.setenv(https_proxy = \"https://proxy.example.com\")"},{"path":"https://rstudio.github.io/rsconnect/dev/articles/custom-http.html","id":"custom-headers-and-cookies","dir":"Articles","previous_headings":"","what":"Custom headers and cookies","title":"Customising HTTP requests","text":"need supply additional headers cookies, can use options rsconnect.http.headers rsconnect.http.cookies respectively. rsconnect.http.headers needs named vector header names values: rsconnect.http.cookies expects cookies formatted way webserver expects : can supply cookie parameters needed: custom headers set first, overridden headers rsconnect needs correctly operate. Similarly, cookies set prior first request, overriden anything returned server.","code":"options(   rsconnect.http.headers = c(     \"CustomHeader1\" = \"CustomValue\", \"CustomHeader2\" = \"CustomValue2\"   ) ) options(   rsconnect.http.headers = c(\"cookie1=value1\", \"cookie2=value2\") ) options(   rsconnect.http.headers = \"cookie1=value1; Expires=Thu, 31 Oct 2021 07:28:00 GMT; Secure\" )"},{"path":"https://rstudio.github.io/rsconnect/dev/articles/custom-http.html","id":"other-custom-options","dir":"Articles","previous_headings":"","what":"Other custom options","title":"Customising HTTP requests","text":"Finally, can supply additional options supported curl::curl_options() rsconnect.libcurl.options, e.g. Run curl::curl_options() see list options.","code":"options(rsconnect.libcurl.options = list(proxy = \"http://proxy.example.com\")"},{"path":"https://rstudio.github.io/rsconnect/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Aron Atkins. Author, maintainer. Toph Allen. Author. Hadley Wickham. Author. Jonathan McPherson. Author. JJ Allaire. Author. . Copyright holder, funder.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Atkins , Allen T, Wickham H, McPherson J, Allaire J (2025). rsconnect: Deploy Docs, Apps, APIs 'Posit Connect', 'shinyapps.io', 'RPubs'. R package version 1.5.1.9000, https://rstudio.github.io/rsconnect/.","code":"@Manual{,   title = {rsconnect: Deploy Docs, Apps, and APIs to 'Posit Connect', 'shinyapps.io', and 'RPubs'},   author = {Aron Atkins and Toph Allen and Hadley Wickham and Jonathan McPherson and JJ Allaire},   year = {2025},   note = {R package version 1.5.1.9000},   url = {https://rstudio.github.io/rsconnect/}, }"},{"path":"https://rstudio.github.io/rsconnect/dev/index.html","id":"rsconnect-","dir":"","previous_headings":"","what":"Deploy Docs, Apps, and APIs to Posit Connect, shinyapps.io, and RPubs","title":"Deploy Docs, Apps, and APIs to Posit Connect, shinyapps.io, and RPubs","text":"rsconnect makes easy publish Shiny apps, RMarkdown Quarto documents, Plumber APIs Posit Connect, ShinyApps.io, Posit Cloud R. (’re looking Python equivalent, try rsconnect-python.)","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Deploy Docs, Apps, and APIs to Posit Connect, shinyapps.io, and RPubs","text":"can install released version rsconnect CRAN : development version GitHub :","code":"install.packages(\"rsconnect\") # install.packages(\"devtools\") devtools::install_github(\"rstudio/rsconnect\")"},{"path":"https://rstudio.github.io/rsconnect/dev/index.html","id":"setup","dir":"","previous_headings":"","what":"Setup","title":"Deploy Docs, Apps, and APIs to Posit Connect, shinyapps.io, and RPubs","text":"use rsconnect, first need teach server want publish . use RStudio IDE, easiest way get set use publishing dialog, can find clicking “Tools” menu, selecting “Global options”, clicking “Publishing”. Click “Connect” add new servers. can also connect R session running little code: shinyapps.io, go tokens page click “Add Token”, follow instructions copy paste appropriate call setAccountInfo(). Learn Getting Started Guide. Posit Connect, first use addServer() register server rsconnect, call either connectUser() connectApiUser(). connectUser() bit simpler ’re interactive session; connectApiUser() works anywhere requires copy paste API key user profile. Posit Cloud, login, click name top-right corner, click “Account”, click “Tokens” navbar top page. Click “New Token”, “Copy” next token just created, follow instructions copy paste appropriate call setAccountInfo(). Now ’re setup can use deployApp(), deployDoc(), friends publish apps, documentations, APIs .","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/accountUsage.html","id":null,"dir":"Reference","previous_headings":"","what":"Show Account Usage — accountUsage","title":"Show Account Usage — accountUsage","text":"Show account usage","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/accountUsage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show Account Usage — accountUsage","text":"","code":"accountUsage(   account = NULL,   server = NULL,   usageType = \"hours\",   from = NULL,   until = NULL,   interval = NULL )"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/accountUsage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show Account Usage — accountUsage","text":"account, server Uniquely identify remote server either user account, server name, . neither supplied, multiple options, prompted pick one. Use accounts() see full list available options. usageType Use metric retreive (example: \"hours\") Date range starting timestamp (Unix timestamp relative time delta \"2d\" \"3w\"). Date range ending timestamp (Unix timestamp relative time delta \"2d\" \"3w\"). interval Summarization interval. Data points intervals less grouped. (Number seconds relative time delta e.g. \"1h\").","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/accountUsage.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Show Account Usage — accountUsage","text":"function works ShinyApps servers.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/accounts.html","id":null,"dir":"Reference","previous_headings":"","what":"Account Management Functions — accounts","title":"Account Management Functions — accounts","text":"Functions enumerate remove accounts local system. Prior deploying applications need register account local system.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/accounts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Account Management Functions — accounts","text":"","code":"accounts(server = NULL)  accountInfo(name = NULL, server = NULL)  removeAccount(name = NULL, server = NULL)"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/accounts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Account Management Functions — accounts","text":"server Name server account registered (optional; see servers()) name Name account","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/accounts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Account Management Functions — accounts","text":"accounts returns data frame names accounts registered system servers reside. accountInfo returns list account details.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/accounts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Account Management Functions — accounts","text":"register account using setAccountInfo() function (ShinyApps) connectUser() function (servers). can subsequently remove account using removeAccount function. accounts accountInfo functions provided viewing previously registered accounts.","code":""},{"path":[]},{"path":"https://rstudio.github.io/rsconnect/dev/reference/addAuthorizedUser.html","id":null,"dir":"Reference","previous_headings":"","what":"Add authorized user to application — addAuthorizedUser","title":"Add authorized user to application — addAuthorizedUser","text":"Add authorized user application","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/addAuthorizedUser.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add authorized user to application — addAuthorizedUser","text":"","code":"addAuthorizedUser(   email,   appDir = getwd(),   appName = NULL,   account = NULL,   server = NULL,   sendEmail = NULL,   emailMessage = NULL )"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/addAuthorizedUser.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add authorized user to application — addAuthorizedUser","text":"email Email address user add. appDir Directory containing application. Defaults current working directory. appName Name application. account, server Uniquely identify remote server either user account, server name, . neither supplied, multiple options, prompted pick one. Use accounts() see full list available options. sendEmail Send email letting user know application shared . emailMessage Optional character vector length 1 containing custom message send email invitation. Defaults NULL, use default invitation message.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/addAuthorizedUser.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Add authorized user to application — addAuthorizedUser","text":"function works ShinyApps servers.","code":""},{"path":[]},{"path":"https://rstudio.github.io/rsconnect/dev/reference/addConnectServer.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a server — addConnectServer","title":"Add a server — addConnectServer","text":"function thing addServer() removed.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/addConnectServer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a server — addConnectServer","text":"","code":"addConnectServer(url, name = NULL, certificate = NULL, quiet = FALSE)"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/addConnectServer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a server — addConnectServer","text":"url URL server. Can bare hostname like connect.mycompany.com url like http://posit.mycompany.com/connect. name Server name. omitted, server hostname used. certificate Optional. Either path certificate file character vector containing certificate's contents. quiet Suppress output prompts possible.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/addLinter.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a Linter — addLinter","title":"Add a Linter — addLinter","text":"Add linter, used subsequent calls lint(). Add linter, used subsequent calls lint().","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/addLinter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a Linter — addLinter","text":"","code":"addLinter(name, linter)  addLinter(name, linter)"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/addLinter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a Linter — addLinter","text":"name name linter, string. linter linter().","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/addLinter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a Linter — addLinter","text":"","code":"addLinter(\"no.capitals\", linter(    ## Identify lines containing capital letters -- either by name or by index   apply = function(content, ...) {     grep(\"[A-Z]\", content)   },    ## Only use this linter on R files (paths ending with .r or .R)   takes = function(paths) {     grep(\"[rR]$\", paths)   },    # Use the default message constructor   message = function(content, lines, ...) {     makeLinterMessage(\"Capital letters found on the following lines\", content, lines)   },    # Give a suggested prescription   suggest = \"Do not use capital letters in these documents.\" )) addLinter(\"no.capitals\", linter(    ## Identify lines containing capital letters -- either by name or by index   apply = function(content, ...) {     grep(\"[A-Z]\", content)   },    ## Only use this linter on R files (paths ending with .r or .R)   takes = function(paths) {     grep(\"[rR]$\", paths)   },    # Use the default message constructor   message = function(content, lines, ...) {     makeLinterMessage(\"Capital letters found on the following lines\", content, lines)   },    # Give a suggested prescription   suggest = \"Do not use capital letters in these documents.\" ))"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/addServer.html","id":null,"dir":"Reference","previous_headings":"","what":"Server management — addServer","title":"Server management — addServer","text":"functions manage list known servers: addServer() registers Posit connect server. registered, can connect account server using connectUser(). removeServer() removes server registry. addServerCertificate() adds certificate server.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/addServer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server management — addServer","text":"","code":"addServer(   url,   name = NULL,   certificate = NULL,   validate = TRUE,   snowflakeConnectionName = NULL,   quiet = FALSE )  removeServer(name = NULL)  addServerCertificate(name, certificate, quiet = FALSE)"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/addServer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server management — addServer","text":"url URL server. Can bare hostname like connect.mycompany.com url like http://posit.mycompany.com/connect. name Server name. omitted, server hostname used. certificate Optional. Either path certificate file character vector containing certificate's contents. validate Validate url actually points Posit Connect server? snowflakeConnectionName Name Snowflake connection parameters stored connections.toml. quiet Suppress output prompts possible.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/addServer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Server management — addServer","text":"","code":"if (FALSE) { # \\dontrun{ # register a local server addServer(\"http://myrsconnect/\", \"myserver\")  # list servers servers(local = TRUE)  # connect to an account on the server connectUser(server = \"myserver\") } # }"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/appDependencies.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect application dependencies — appDependencies","title":"Detect application dependencies — appDependencies","text":"appDependencies() recursively detects R package dependencies application parsing .R .Rmd files looking calls library(), require(), requireNamespace(), ::, . adds implicit dependencies (.e. .Rmd requires Rmarkdown) adds recursive dependencies create complete manifest package packages need installed run app.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/appDependencies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect application dependencies — appDependencies","text":"","code":"appDependencies(   appDir = getwd(),   appFiles = NULL,   appFileManifest = NULL,   appMode = NULL )"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/appDependencies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect application dependencies — appDependencies","text":"appDir directory containing application (e.g. Shiny app plumber API). Defaults current directory. appFiles, appFileManifest Use appFiles specify character vector files bundle app appFileManifest provide path file containing list files. neither supplied, bundle files appDir, apart standard exclusions files listed .rscignore file. See listDeploymentFiles() details. appMode Optional; type content deployed. Provide option inferred type content incorrect. can happen, example, static HTML content includes downloadable Shiny application app.R. Accepted values include \"shiny\", \"api\", \"rmd-static\", \"rmd-shiny\", \"quarto-static\", \"quarto-shiny\", \"static\". Posit Connect API Reference contains full set available values. servers support types content.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/appDependencies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect application dependencies — appDependencies","text":"data frame one row dependency (direct, indirect, inferred), 4 columns: Package: package name. Version: local version. Source: short string describing source package install, described . Repository: CRAN CRAN-like repositories, URL repository. ignored server configured repository name -> repository URL mapping.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/appDependencies.html","id":"dependency-discovery","dir":"Reference","previous_headings":"","what":"Dependency discovery","title":"Detect application dependencies — appDependencies","text":"rsconnect use one three mechanisms find packages application uses: renv.lock present, use versions sources defined file. using lockfile purpose want affect deployment, add renv.lock .rscignore. Otherwise, rsconnect call renv::snapshot() find packages used code. instead prefer use packages declared DESCRIPTION file, run renv::settings$snapshot.type(\"explicit\") activate renv's \"explicit\" mode. Dependency resolution using renv new feature rsconnect 1.0.0, done best test , still might fail app. happens, please file issue set options(rsconnect.packrat = TRUE) revert old dependency discovery mechanism.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/appDependencies.html","id":"remote-installation","dir":"Reference","previous_headings":"","what":"Remote installation","title":"Detect application dependencies — appDependencies","text":"deployed, app must first install packages, rsconnect ensures versions used server match versions used locally. knows install packages following sources: CRAN BioConductor (Source: CRAN Source: Bioconductor). remote server ignore specific CRAN Bioconductor mirror use locally, always using CRAN/BioC mirror configured server. CRAN like CRAN-like repositories. packages Source determined value getOptions(\"repos\"). example, set following options:   packages installed corporate package repository source CORPORATE. Posit Connect can configured override repository url (e.g.) can use different packages versions staging production servers. Packages installed GitHub, GitLab, BitBucket, Source github, gitlab, bitbucket respectively. deployed, bundle contains additional metadata needed precisely recreated installed version. possible recreate packages built installed directory local computer. Source: NA cause deployment error. resolve issue, need install one known sources described .","code":"options(    repos = c(      CRAN = \"https://cran.rstudio.com/\",      CORPORATE = \"https://corporate-packages.development.company.com\"    ) )"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/appDependencies.html","id":"suggested-packages","dir":"Reference","previous_headings":"","what":"Suggested packages","title":"Detect application dependencies — appDependencies","text":"Suggests field included determining recursive dependencies, possible every package required run application detected. example, ggplot2's geom_hex() requires hexbin package installed, suggested ggplot2. app uses geom_hex() fail, reporting hexbin package installed. can overcome problem (e.g.) requireNamespace(hexbin). tell rsconnect app needs hexbin package, without otherwise affecting code.","code":""},{"path":[]},{"path":"https://rstudio.github.io/rsconnect/dev/reference/appDependencies.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect application dependencies — appDependencies","text":"","code":"if (FALSE) { # \\dontrun{  # dependencies for the app in the current working dir appDependencies()  # dependencies for an app in another directory appDependencies(\"~/projects/shiny/app1\") } # }"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/applicationConfigDir.html","id":null,"dir":"Reference","previous_headings":"","what":"Application Configuration Directory — applicationConfigDir","title":"Application Configuration Directory — applicationConfigDir","text":"Returns root path used store per user configuration data. check old locations create path; use rsconnectConfigDir cases.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/applicationConfigDir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Application Configuration Directory — applicationConfigDir","text":"","code":"applicationConfigDir()"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/applicationConfigDir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Application Configuration Directory — applicationConfigDir","text":"string containing path configuration folder.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/applications.html","id":null,"dir":"Reference","previous_headings":"","what":"List Deployed Applications — applications","title":"List Deployed Applications — applications","text":"List applications currently deployed given account.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/applications.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Deployed Applications — applications","text":"","code":"applications(account = NULL, server = NULL)"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/applications.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Deployed Applications — applications","text":"account, server Uniquely identify remote server either user account, server name, . neither supplied, multiple options, prompted pick one. Use accounts() see full list available options.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/applications.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Deployed Applications — applications","text":"Returns data frame following columns:","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/applications.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"List Deployed Applications — applications","text":"register account call setAccountInfo() function.","code":""},{"path":[]},{"path":"https://rstudio.github.io/rsconnect/dev/reference/applications.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List Deployed Applications — applications","text":"","code":"if (FALSE) { # \\dontrun{  # list all applications for the default account applications()  # list all applications for a specific account applications(\"myaccount\")  # view the list of applications in the data viewer View(applications()) } # }"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/authorizedUsers.html","id":null,"dir":"Reference","previous_headings":"","what":"(Deprecated) List authorized users for an application — authorizedUsers","title":"(Deprecated) List authorized users for an application — authorizedUsers","text":"(Deprecated) List authorized users application","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/authorizedUsers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Deprecated) List authorized users for an application — authorizedUsers","text":"","code":"authorizedUsers(appDir = getwd())"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/authorizedUsers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Deprecated) List authorized users for an application — authorizedUsers","text":"appDir Directory containing application. Defaults current working directory.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/configureApp.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure an Application — configureApp","title":"Configure an Application — configureApp","text":"Configure application running remote server.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/configureApp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure an Application — configureApp","text":"","code":"configureApp(   appName,   appDir = getwd(),   account = NULL,   server = NULL,   redeploy = TRUE,   size = NULL,   instances = NULL,   logLevel = c(\"normal\", \"quiet\", \"verbose\") )"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/configureApp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure an Application — configureApp","text":"appName Name application configure appDir Directory containing application. Defaults current working directory. account, server Uniquely identify remote server either user account, server name, . neither supplied, multiple options, prompted pick one. Use accounts() see full list available options. redeploy Re-deploy application configured. size Configure application instance size instances Configure number application instances logLevel One \"quiet\", \"normal\" \"verbose\"; indicates much logging console performed. \"quiet\" reports information; \"verbose\", full diagnostic log captured.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/configureApp.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Configure an Application — configureApp","text":"function works ShinyApps servers.","code":""},{"path":[]},{"path":"https://rstudio.github.io/rsconnect/dev/reference/configureApp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure an Application — configureApp","text":"","code":"if (FALSE) { # \\dontrun{  # set instance size for an application configureApp(\"myapp\", size=\"xlarge\") } # }"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/connectApiUser.html","id":null,"dir":"Reference","previous_headings":"","what":"Register account on Posit Connect — connectApiUser","title":"Register account on Posit Connect — connectApiUser","text":"connectUser() connectApiUser() connect Posit Connect account rsconnect package can deploy manage applications behalf. connectUser() easiest place start allows authenticate -browser Posit Connect server. connectApiUser() appropriate non-interactive settings; need copy--paste API key account settings.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/connectApiUser.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Register account on Posit Connect — connectApiUser","text":"","code":"connectApiUser(account = NULL, server = NULL, apiKey, quiet = FALSE)  connectUser(   account = NULL,   server = NULL,   quiet = FALSE,   launch.browser = getOption(\"rsconnect.launch.browser\", interactive()) )"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/connectApiUser.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Register account on Posit Connect — connectApiUser","text":"account name account connect. server server connect . apiKey API key used authenticate user quiet Whether show messages prompts connecting account. launch.browser true, system's default web browser launched automatically app started. Defaults TRUE interactive sessions . function passed, called app started, app URL parameter.","code":""},{"path":[]},{"path":"https://rstudio.github.io/rsconnect/dev/reference/connectSPCSUser.html","id":null,"dir":"Reference","previous_headings":"","what":"Register account on Posit Connect in Snowpark Container Services — connectSPCSUser","title":"Register account on Posit Connect in Snowpark Container Services — connectSPCSUser","text":"connectSPCSUser() connects Posit Connect account rsconnect package can deploy manage applications behalf. Configure connections.toml file appropriate location.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/connectSPCSUser.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Register account on Posit Connect in Snowpark Container Services — connectSPCSUser","text":"","code":"connectSPCSUser(   account = NULL,   server = NULL,   snowflakeConnectionName,   quiet = FALSE )"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/connectSPCSUser.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Register account on Posit Connect in Snowpark Container Services — connectSPCSUser","text":"account name account connect. server server connect . snowflakeConnectionName Name Snowflake connection parameters stored connections.toml. quiet Whether show messages prompts connecting account.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/deployAPI.html","id":null,"dir":"Reference","previous_headings":"","what":"Deploy a Plumber API — deployAPI","title":"Deploy a Plumber API — deployAPI","text":"Deploys application consisting plumber API routes. given directory must contain script returning plumb object plumber API definition.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/deployAPI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deploy a Plumber API — deployAPI","text":"","code":"deployAPI(api, ...)"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/deployAPI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deploy a Plumber API — deployAPI","text":"api Path API project directory. Must contain either entrypoint.R plumber.R (plumber APIs) _server.yml (plumber2 APIs) ... Additional arguments deployApp().","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/deployAPI.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Deploy a Plumber API — deployAPI","text":"Deploy plumber API definition either supplying directory containing plumber.R (API definition) entrypoint.R returns plumb object created plumber::plumb(). See plumber documentation information. Alternatively, deploy plumber2 API supplying directory containing _server.yml.","code":""},{"path":[]},{"path":"https://rstudio.github.io/rsconnect/dev/reference/deployApp.html","id":null,"dir":"Reference","previous_headings":"","what":"Deploy an Application — deployApp","title":"Deploy an Application — deployApp","text":"Deploy shiny application, RMarkdown document, plumber API, HTML content server.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/deployApp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deploy an Application — deployApp","text":"","code":"deployApp(   appDir = getwd(),   appFiles = NULL,   appFileManifest = NULL,   appPrimaryDoc = NULL,   appSourceDoc = NULL,   appName = NULL,   appTitle = NULL,   envVars = NULL,   appId = NULL,   appMode = NULL,   contentCategory = NULL,   account = NULL,   server = NULL,   upload = TRUE,   recordDir = NULL,   launch.browser = getOption(\"rsconnect.launch.browser\", is_interactive()),   on.failure = NULL,   logLevel = c(\"normal\", \"quiet\", \"verbose\"),   lint = TRUE,   metadata = list(),   forceUpdate = NULL,   python = NULL,   forceGeneratePythonEnvironment = FALSE,   quarto = NA,   appVisibility = NULL,   image = NULL,   envManagement = NULL,   envManagementR = NULL,   envManagementPy = NULL,   space = NULL )"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/deployApp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deploy an Application — deployApp","text":"appDir directory containing application (e.g. Shiny app plumber API). Defaults current directory. appFiles, appFileManifest Use appFiles specify character vector files bundle app appFileManifest provide path file containing list files. neither supplied, bundle files appDir, apart standard exclusions files listed .rscignore file. See listDeploymentFiles() details. appPrimaryDoc application contains one document, parameter indicates primary one, path relative appDir. Can NULL, case primary document inferred contents deployed. appSourceDoc Please use recordDir instead. appName Application name, string consisting letters, numbers, _ -. application name used identify applications server, must unique. specified, first deployment automatically appDir directory website, appPrimaryDoc document. subsequent deploys, use previously stored value. appTitle Free-form descriptive title application. Optional; supplied, often displayed favor name. ommitted, second subsequent deploys, title unchanged. envVars character vector giving names environment variables whose values synchronised server (currently supported Connect ). values environment variables sent encrypted connection stored bundle, making safe way send private data Connect. values sensitive environment variables set current session via .Renviron file help credential store like keyring. Avoid using Sys.setenv() sensitive values, results value appearing .Rhistory. names (values) stored deployment record future deployments automatically update values. environment variables server affected. means removing environment variable envVars leave unchanged server. remove , either delete using Connect UI, temporarily unset (Sys.unsetenv() similar) re-deploy. Environment variables set prior deployment code can use first deployment can still succeed. Note means deployment fails, values still updated. appId Use deploy exact known application, ignoring existing deployment records appName. can use update existing application missing deployment record. re-deploying application created generally easier use appName; appId best reserved re-deploying apps created someone else. can find appId following places: shinyapps.io, id listed applications page. Posit Connect, guid info tab content page. appMode Optional; type content deployed. Provide option inferred type content incorrect. can happen, example, static HTML content includes downloadable Shiny application app.R. Accepted values include \"shiny\", \"api\", \"rmd-static\", \"rmd-shiny\", \"quarto-static\", \"quarto-shiny\", \"static\". Posit Connect API Reference contains full set available values. servers support types content. contentCategory Optional; classifies kind content deployed (e.g. \"plot\" \"site\"). account, server Uniquely identify remote server either user account, server name, . neither supplied, multiple options, prompted pick one. Use accounts() see full list available options. upload TRUE (default) application uploaded local system prior deployment. FALSE re-deployed using last version uploaded. FALSE supported shinyapps.io; TRUE required Posit Connect. recordDir Directory deployment record written. default, NULL, uses appDir, since usually want deployment data stored. argument typically needed deploying directory static files since want store record code generated files, files . launch.browser true, system's default web browser launched automatically app started. Defaults TRUE interactive sessions . function passed, called app started, app URL paramter. .failure Function called deployment fails. deployment log URL available, passed parameter. logLevel One \"quiet\", \"normal\" \"verbose\"; indicates much logging console performed. \"quiet\" reports information; \"verbose\", full diagnostic log captured. lint Lint project initiating deployment, identify potentially problematic code? metadata Additional metadata fields save deployment record. fields returned subsequent calls deployments(). Multi-value fields recorded comma-separated values returned form. Custom value serialization responsibility caller. forceUpdate happen deployment record app, app name server? TRUE, always update previously-deployed app. FALSE, ask user , fail interactive context. Defaults TRUE called automatically IDE, FALSE otherwise. can override default setting option rsconnect.force.update.apps. python Full path python binary use reticulate. Required reticulate dependency app deployed. python = NULL, RETICULATE_PYTHON RETICULATE_PYTHON_FALLBACK set environment, value used. specified python binary invoked determine version list python packages installed environment. forceGeneratePythonEnvironment Optional. existing requirements.txt file found, overwritten argument TRUE. quarto deployed content built quarto? (TRUE, FALSE, NA). default, NA, use quarto .qmd files bundle, _quarto.yml .Rmd files. (option ignored quarto always used metadata contains quarto_version quarto_engines fields.) appVisibility One NULL, \"private\", \"public\"; visibility deployment. NULL, change visibility made. Currently effect deployments shinyapps.io. image Optional. name image use building executing content. none provided, Posit Connect attempt choose image based content requirements. can override default setting environment variable RSCONNECT_IMAGE. envManagement Optional. Posit Connect install R Python packages content? (TRUE, FALSE, NULL). default, NULL, write values bundle manifest, Connect fall back application default environment management strategy, server default application default defined. (option shorthand flag overwrites values envManagementR envManagementPy.) envManagementR Optional. Posit Connect install R packages content? (TRUE, FALSE, NULL). default, NULL, write values bundle manifest, Connect fall back application default R environment management strategy, server default application default defined. (option ignored envManagement non-NULL.) envManagementPy Optional. Posit Connect install Python packages content? (TRUE, FALSE, NULL). default, NULL, write values bundle manifest, Connect fall back application default Python environment management strategy, server default application default defined. (option ignored envManagement non-NULL.) space Optional. Posit Cloud, id space content deployed. none provided, content deployed deploying user's workspace deployed space case redeploy.","code":""},{"path":[]},{"path":"https://rstudio.github.io/rsconnect/dev/reference/deployApp.html","id":"deployment-records","dir":"Reference","previous_headings":"","what":"Deployment records","title":"Deploy an Application — deployApp","text":"deploying app, deployApp() save deployment record makes easy update app server local source code. generally means need need supply important arguments (e.g. appName, appTitle, server/account) first deploy, rsconnect reuse settings subsequent deploys. metadata needs make work stored {appDir}/rsconnect/. generally check files version control ensure future collaborators publish location. lost directory, lost, deployApp() attempt rediscover existing deployments. easiest updating app created, can just supply appName (server/account multiple accounts) deployApp() find existing application account. need update app created someone else (write permission) , instead need supply appId.","code":""},{"path":[]},{"path":"https://rstudio.github.io/rsconnect/dev/reference/deployApp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Deploy an Application — deployApp","text":"","code":"if (FALSE) { # \\dontrun{  # deploy the application in the current working dir deployApp()  # deploy an application in another directory deployApp(\"~/projects/shiny/app1\")  # deploy using an alternative application name and title deployApp(\"~/projects/shiny/app1\", appName = \"myapp\",           appTitle = \"My Application\")  # deploy specifying an explicit account name, then # redeploy with no arguments (will automatically use # the previously specified account) deployApp(account = \"jsmith\") deployApp()  # deploy but don't launch a browser when completed deployApp(launch.browser = FALSE)  # deploy a Quarto website, using the quarto package to # find the Quarto binary deployApp(\"~/projects/quarto/site1\")  # deploy application with environment variables # (e.g., `SECRET_PASSWORD=XYZ` is set via an ~/.Renviron file) rsconnect::deployApp(envVars = c(\"SECRET_PASSWORD\")) } # }"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/deployDoc.html","id":null,"dir":"Reference","previous_headings":"","what":"Deploy a single document — deployDoc","title":"Deploy a single document — deployDoc","text":"Deploys single R Markdown, Quarto document, file (e.g. .html .pdf). deploying .Rmd, .Qmd, .html, deployDoc() attempt automatically discover dependencies using rmarkdown::find_external_resources(), include .Rprofile present. find document missing dependencies, either specify dependencies explicitly document (see rmarkdown::find_external_resources() details), call deployApp() directly specify file list appFiles.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/deployDoc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deploy a single document — deployDoc","text":"","code":"deployDoc(doc, ..., logLevel = c(\"normal\", \"quiet\", \"verbose\"))"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/deployDoc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deploy a single document — deployDoc","text":"doc Path document deploy. ... Additional arguments deployApp(). supply appDir, appFiles, appPrimaryDoc; three parameters automatically generated deployDoc document. logLevel One \"quiet\", \"normal\" \"verbose\"; indicates much logging console performed. \"quiet\" reports information; \"verbose\", full diagnostic log captured.","code":""},{"path":[]},{"path":"https://rstudio.github.io/rsconnect/dev/reference/deployDoc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Deploy a single document — deployDoc","text":"","code":"if (FALSE) { # \\dontrun{ deployDoc(\"my-report.Rmd\") deployDoc(\"static-file.html\") } # }"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/deploySite.html","id":null,"dir":"Reference","previous_headings":"","what":"Deploy a website — deploySite","title":"Deploy a website — deploySite","text":"Deploy R Markdown quarto website server.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/deploySite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deploy a website — deploySite","text":"","code":"deploySite(   siteDir = getwd(),   siteName = NULL,   siteTitle = NULL,   account = NULL,   server = NULL,   render = c(\"none\", \"local\", \"server\"),   launch.browser = getOption(\"rsconnect.launch.browser\", interactive()),   logLevel = c(\"normal\", \"quiet\", \"verbose\"),   lint = FALSE,   metadata = list(),   python = NULL,   recordDir = NULL,   ... )"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/deploySite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deploy a website — deploySite","text":"siteDir Directory containing website. Defaults current directory. siteName Name site (names must unique within account). Defaults base name specified siteDir name provided custom site generation function. siteTitle Title site. quarto sites , supplied uses title recorded _quarto.yml. account, server Uniquely identify remote server either user account, server name, . neither supplied, multiple options, prompted pick one. Use accounts() see full list available options. render Rendering behavior site: \"none\" uploads static version current contents site directory. \"local\" renders site locally uploads . \"server\" uploads source site render server. Note \"none\" \"local\" source files (e.g. .R, .Rmd .md) uploaded server. launch.browser true, system's default web browser launched automatically app started. Defaults TRUE interactive sessions . function passed, called app started, app URL paramter. logLevel One \"quiet\", \"normal\" \"verbose\"; indicates much logging console performed. \"quiet\" reports information; \"verbose\", full diagnostic log captured. lint Lint project initiating deployment, identify potentially problematic code? metadata Additional metadata fields save deployment record. fields returned subsequent calls deployments(). Multi-value fields recorded comma-separated values returned form. Custom value serialization responsibility caller. python Full path python binary use reticulate. Required reticulate dependency app deployed. python = NULL, RETICULATE_PYTHON RETICULATE_PYTHON_FALLBACK set environment, value used. specified python binary invoked determine version list python packages installed environment. recordDir default, NULL, uses siteDir. ... Additional arguments deployApp(). supply appDir appFiles; parameters automatically generated deploySite().","code":""},{"path":[]},{"path":"https://rstudio.github.io/rsconnect/dev/reference/deployTFModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Deploy a TensorFlow saved model — deployTFModel","title":"Deploy a TensorFlow saved model — deployTFModel","text":"Deploys directory containing TensorFlow saved model.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/deployTFModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deploy a TensorFlow saved model — deployTFModel","text":"","code":"deployTFModel(...)"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/deployTFModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deploy a TensorFlow saved model — deployTFModel","text":"... Additional arguments deployApp().","code":""},{"path":[]},{"path":"https://rstudio.github.io/rsconnect/dev/reference/deployments.html","id":null,"dir":"Reference","previous_headings":"","what":"List Application Deployments — deployments","title":"List Application Deployments — deployments","text":"List deployment records given application.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/deployments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Application Deployments — deployments","text":"","code":"deployments(   appPath = \".\",   nameFilter = NULL,   accountFilter = NULL,   serverFilter = NULL,   excludeOrphaned = TRUE )"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/deployments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Application Deployments — deployments","text":"appPath path content deployed, either directory individual document. nameFilter Return deployments matching given name (optional) accountFilter Return deployments matching given account (optional) serverFilter Return deployments matching given server (optional) excludeOrphaned TRUE (default), return deployments made currently registered account. Deployments made accounts longer registered (via e.g.removeAccount()) returned.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/deployments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Application Deployments — deployments","text":"Returns data frame least following columns: additional metadata saved deployment record using metadata argument deployApp(), frame include additional columns.","code":""},{"path":[]},{"path":"https://rstudio.github.io/rsconnect/dev/reference/deployments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List Application Deployments — deployments","text":"","code":"if (FALSE) { # \\dontrun{  # Return all deployments of the ~/r/myapp directory made with the 'abc' # account deployments(\"~/r/myapp\", accountFilter=\"abc\") } # }"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/discoverServers.html","id":null,"dir":"Reference","previous_headings":"","what":"Discover servers automatically — discoverServers","title":"Discover servers automatically — discoverServers","text":"function never worked usefully, removed.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/discoverServers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Discover servers automatically — discoverServers","text":"","code":"discoverServers(quiet = FALSE)"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/forgetDeployment.html","id":null,"dir":"Reference","previous_headings":"","what":"Forget Application Deployment — forgetDeployment","title":"Forget Application Deployment — forgetDeployment","text":"Forgets application deployment. useful application deleted server, local deployment information needs reset.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/forgetDeployment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forget Application Deployment — forgetDeployment","text":"","code":"forgetDeployment(   appPath = getwd(),   name = NULL,   account = NULL,   server = NULL,   dryRun = FALSE,   force = !interactive() )"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/forgetDeployment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forget Application Deployment — forgetDeployment","text":"appPath path content deployed, either directory individual document. name name content deployed (optional) account name account content deployed (optional) server name server content deployed (optional) dryRun Set TRUE preview files/directories removed instead actually removing . Defaults FALSE. force Set TRUE remove files directories without prompting. Defaults FALSE interactive sessions.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/forgetDeployment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Forget Application Deployment — forgetDeployment","text":"NULL, invisibly.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/forgetDeployment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Forget Application Deployment — forgetDeployment","text":"method removes disk file containing deployment metadata. \"name\", \"account\", \"server\" NULL, deployments application forgotten; otherwise, specified deployment forgotten.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/generateAppName.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Application Name — generateAppName","title":"Generate Application Name — generateAppName","text":"Generate short name (identifier) application given application title.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/generateAppName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Application Name — generateAppName","text":"","code":"generateAppName(appTitle, appPath = NULL, account = NULL, unique = TRUE)"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/generateAppName.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Application Name — generateAppName","text":"appTitle descriptive title application. appPath path application's content, either directory individual document. Optional. account account application deployed. Optional. unique Whether try generate unique name.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/generateAppName.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Application Name — generateAppName","text":"Returns valid short name application.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/generateAppName.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Application Name — generateAppName","text":"function modifies title forms suitable application name. Suitable application names 3 - 64 characters long contain alphanumeric characters. function intended used find name new application. appPath account specified, returned name also unique among locally known deployments directory (note guaranteed unique server). behavior can disabled setting unique = FALSE.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/generateAppName.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Application Name — generateAppName","text":"","code":"if (FALSE) { # \\dontrun{ # Generate a short name for a sample application generateAppName(\"My Father's Country\", \"~/fathers-country\", \"myacct\") } # }"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/lint.html","id":null,"dir":"Reference","previous_headings":"","what":"Lint a Project — lint","title":"Lint a Project — lint","text":"Takes set active linters (see addLinter()), applies files within project.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/lint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lint a Project — lint","text":"","code":"lint(project, files = NULL, appPrimaryDoc = NULL)"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/lint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lint a Project — lint","text":"project Path project directory. files Specific files lint. Can NULL, case files directory linted. appPrimaryDoc primary file project directory. Can NULL, case inferred (possible) directory contents.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/linter.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Linter — linter","title":"Create a Linter — linter","text":"Generate linter, can identify errors problematic regions project. Generate linter, can identify errors problematic regions project.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/linter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Linter — linter","text":"","code":"linter(apply, takes, message, suggestion)  linter(apply, takes, message, suggestion)"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/linter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Linter — linter","text":"apply Function , given content file, returns indices problems found. takes Function , given set paths, returns subset paths linter uses. message Function , given content lines, returns informative message user. Typically generated makeLinterMessage(). suggestion String giving prescribed fix linted problem.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/linter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Linter — linter","text":"","code":"addLinter(\"no.capitals\", linter(    ## Identify lines containing capital letters -- either by name or by index   apply = function(content, ...) {     grep(\"[A-Z]\", content)   },    ## Only use this linter on R files (paths ending with .r or .R)   takes = function(paths) {     grep(\"[rR]$\", paths)   },    # Use the default message constructor   message = function(content, lines, ...) {     makeLinterMessage(\"Capital letters found on the following lines\", content, lines)   },    # Give a suggested prescription   suggest = \"Do not use capital letters in these documents.\" )) addLinter(\"no.capitals\", linter(    ## Identify lines containing capital letters -- either by name or by index   apply = function(content, ...) {     grep(\"[A-Z]\", content)   },    ## Only use this linter on R files (paths ending with .r or .R)   takes = function(paths) {     grep(\"[rR]$\", paths)   },    # Use the default message constructor   message = function(content, lines, ...) {     makeLinterMessage(\"Capital letters found on the following lines\", content, lines)   },    # Give a suggested prescription   suggest = \"Do not use capital letters in these documents.\" ))"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/listAccountEnvVars.html","id":null,"dir":"Reference","previous_headings":"","what":"Maintain environment variables across multiple applications — listAccountEnvVars","title":"Maintain environment variables across multiple applications — listAccountEnvVars","text":"listAccountEnvVars() lists environment variables used every application published specified account. updateAccountEnvVars() updates specified environment variables current values every app uses . Secure environment variable currently supported Posit Connect server types generate error.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/listAccountEnvVars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maintain environment variables across multiple applications — listAccountEnvVars","text":"","code":"listAccountEnvVars(server = NULL, account = NULL)  updateAccountEnvVars(envVars, server = NULL, account = NULL)"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/listAccountEnvVars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maintain environment variables across multiple applications — listAccountEnvVars","text":"account, server Uniquely identify remote server either user account, server name, . neither supplied, multiple options, prompted pick one. Use accounts() see full list available options. envVars Names environment variables update. values automatically retrieved current process. specify multiple environment variables, application uses updated .","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/listAccountEnvVars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Maintain environment variables across multiple applications — listAccountEnvVars","text":"listAccountEnvVars() returns data frame one row data frame. variables id, guid, name, envVars. envVars list-column.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/listBundleFiles.html","id":null,"dir":"Reference","previous_headings":"","what":"List Files to be Bundled — listBundleFiles","title":"List Files to be Bundled — listBundleFiles","text":"listBundleFiles() superseded favour listDeploymentFiles(). Given directory containing application, returns names files default bundled application. works similarly recursive directory listing list.files() enforces bundle sizes described listDeploymentFiles()","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/listBundleFiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Files to be Bundled — listBundleFiles","text":"","code":"listBundleFiles(appDir)"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/listBundleFiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Files to be Bundled — listBundleFiles","text":"appDir Directory containing application.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/listBundleFiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Files to be Bundled — listBundleFiles","text":"Returns list containing following elements: totalFiles: Total number files. totalSize: Total size files (bytes). contents: Paths bundle, relative appDir.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/listDeploymentFiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Gather files to be bundled with an app — listDeploymentFiles","title":"Gather files to be bundled with an app — listDeploymentFiles","text":"Given app directory, optional appFiles appFileManifest arguments, returns vector paths bundle app. (Note documents follow different strategy; see deployDoc() details.) neither appFiles appFileManifest supplied, listDeploymentFiles() include files appDir, apart following: Certain files folders need bundled, version control directories, internal config files, RStudio state, automatically excluded. can exclude additional files listing .rscignore file. file must one file directory per line (path relative current directory). support wildcards, ignoring files subdirectories. listDeploymentFiles() throw error total file size exceeds maximum bundle size (controlled option rsconnect.max.bundle.size), number files exceeds maximum file limit (controlled option rsconnect.max.bundle.files). prevents accidentally bundling large direcfory (.e. home directory).","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/listDeploymentFiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gather files to be bundled with an app — listDeploymentFiles","text":"","code":"listDeploymentFiles(   appDir,   appFiles = NULL,   appFileManifest = NULL,   error_call = caller_env() )"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/listDeploymentFiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gather files to be bundled with an app — listDeploymentFiles","text":"appDir directory containing application (e.g. Shiny app plumber API). Defaults current directory. appFiles, appFileManifest Use appFiles specify character vector files bundle app appFileManifest provide path file containing list files. neither supplied, bundle files appDir, apart standard exclusions files listed .rscignore file. See listDeploymentFiles() details. error_call call environment error reporting; expert use .","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/listDeploymentFiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gather files to be bundled with an app — listDeploymentFiles","text":"Character paths bundle, relative appDir.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/makeLinterMessage.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a Linter Message — makeLinterMessage","title":"Construct a Linter Message — makeLinterMessage","text":"Pretty-prints linter message. Primarily used helper constructing linter messages linter().","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/makeLinterMessage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a Linter Message — makeLinterMessage","text":"","code":"makeLinterMessage(header, content, lines)"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/makeLinterMessage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a Linter Message — makeLinterMessage","text":"header header message describing linter. content content file linted. lines line numbers content contain lint.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/oldApplicationConfigDir.html","id":null,"dir":"Reference","previous_headings":"","what":"Old Application Config Directory — oldApplicationConfigDir","title":"Old Application Config Directory — oldApplicationConfigDir","text":"Returns old application configuration directory used rsconnect 0.8.24 prior. versions wrote configuration data XDG compliant locations, CRAN policy since restricted disk locations permitted. See:","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/oldApplicationConfigDir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Old Application Config Directory — oldApplicationConfigDir","text":"","code":"oldApplicationConfigDir(appName)"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/oldApplicationConfigDir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Old Application Config Directory — oldApplicationConfigDir","text":"appName application's name (connect rsconnect)","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/oldApplicationConfigDir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Old Application Config Directory — oldApplicationConfigDir","text":"old application configuration directory.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/oldApplicationConfigDir.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Old Application Config Directory — oldApplicationConfigDir","text":"https://cran.r-project.org/web/packages/policies.html","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/options.html","id":null,"dir":"Reference","previous_headings":"","what":"Package Options — rsconnectOptions","title":"Package Options — rsconnectOptions","text":"rsconnect package supports several options control method used http communications, printing diagnostic information http requests, launching external browser deployment.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/options.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Package Options — rsconnectOptions","text":"Supported global options include: rsconnect.ca.bundle Path custom bundle Certificate Authority root certificates use connecting servers via SSL. option can also specied environment variable RSCONNECT_CA_BUNDLE. Leave undefined use system's default certificate store. rsconnect.check.certificate Whether check SSL certificate connecting remote host; defaults TRUE. Setting FALSE insecure, allow connect hosts using invalid certificates last resort. rsconnect.http Http implementation used connections back-end service: option specified libcurl used default. rsconnect.http.trace TRUE, trace http calls (prints method, path, total milliseconds http request) rsconnect.http.trace.json TRUE, trace JSON content (shows JSON payloads sent received server)) rsconnect.http.verbose TRUE, print verbose output http connections (useful debugging SSL certificate http connection problems) rsconnect.tar default, rsconnect uses R's internal tar implementation compress content bundles. may cause invalid bundles environments. cases, use option specify path alternate tar executable. option can also specified environment variable RSCONNECT_TAR. Leave undefined use default tar implementation. rsconnect.rcurl.options named list additional cURL options use using RCurl HTTP implementation R. Run RCurl::curlOptions() see available options. rsconnect.libcurl.options named list additional cURL options use using curl HTTP implementation R. Run curl::curl_options() see available options. rsconnect.error.trace TRUE, print detailed stack traces errors occurring deployment. rsconnect.launch.browser TRUE, automatically launch browser view applications deployed rsconnect.locale.cache FALSE, disable detected locale cache (Windows ). rsconnect.locale Override detected locale. rsconnect.max.bundle.size maximum size, bytes, deployed content. set, defaults 3 GB. rsconnect.max.bundle.files maximum number files deploy. set, defaults 10,000. rsconnect.force.update.apps TRUE, bypasses prompt confirm whether wish update previously-deployed content rsconnect.pre.deploy function run prior deploying content; receives argument directory containing content  deployed. rsconnect.post.deploy function run successfully deploying content; receives argument directory containing content  deployed. rsconnect.python.enabled TRUE, use python executable specified RETICULATE_PYTHON environment variable add python section deployment manifest. default, python enabled deploying Posit Connect disabled deploying shinyapps.io. deploying content RStudio IDE, rsconnect package's deployment methods executed vanilla R session execute startup scripts. can make challenging ensure options set properly prior push-button deployment, rsconnect package parallel set “startup” scripts runs prior deploying. follow run order, exist, prior deployment: $R_HOME/etc/rsconnect.site Like Rprofile.site; site-wide pre-flight options. ~/.rsconnect_profile Like .Rprofile; user-specific content. $PROJECT/.rsconnect_profile Like .Rprofile projects; $PROJECT refers root directory content deployed. Note , unlike .Rprofile, files replace ; three run exist.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Package Options — rsconnectOptions","text":"","code":"if (FALSE) { # \\dontrun{  # use curl for http connections options(rsconnect.http = \"curl\")  # trace http requests options(rsconnect.http.trace = TRUE)  # print verbose output for http requests options(rsconnect.http.verbose = TRUE)  # print JSON content options(rsconnect.http.trace.json = TRUE)  # don't automatically launch a browser after deployment options(rsconnect.launch.browser = FALSE) } # }"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/purgeApp.html","id":null,"dir":"Reference","previous_headings":"","what":"Purge an Application — purgeApp","title":"Purge an Application — purgeApp","text":"Purge currently archived ShinyApps application.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/purgeApp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Purge an Application — purgeApp","text":"","code":"purgeApp(appName, account = NULL, server = NULL, quiet = FALSE)"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/purgeApp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Purge an Application — purgeApp","text":"appName Name application purge account Account name. single account registered system parameter can omitted. server Server name. Required use account name multiple servers (see servers()) quiet Request status information printed console termination.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/purgeApp.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Purge an Application — purgeApp","text":"function works ShinyApps servers.","code":""},{"path":[]},{"path":"https://rstudio.github.io/rsconnect/dev/reference/purgeApp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Purge an Application — purgeApp","text":"","code":"if (FALSE) { # \\dontrun{  # purge an application purgeApp(\"myapp\") } # }"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/removeAuthorizedUser.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove authorized user from an application — removeAuthorizedUser","title":"Remove authorized user from an application — removeAuthorizedUser","text":"Remove authorized user application","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/removeAuthorizedUser.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove authorized user from an application — removeAuthorizedUser","text":"","code":"removeAuthorizedUser(   user,   appDir = getwd(),   appName = NULL,   account = NULL,   server = NULL )"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/removeAuthorizedUser.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove authorized user from an application — removeAuthorizedUser","text":"user user remove. Can id email address. appDir Directory containing application. Defaults current working directory. appName Name application. account, server Uniquely identify remote server either user account, server name, . neither supplied, multiple options, prompted pick one. Use accounts() see full list available options.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/removeAuthorizedUser.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Remove authorized user from an application — removeAuthorizedUser","text":"function works ShinyApps servers.","code":""},{"path":[]},{"path":"https://rstudio.github.io/rsconnect/dev/reference/resendInvitation.html","id":null,"dir":"Reference","previous_headings":"","what":"Resend invitation for invited users of an application — resendInvitation","title":"Resend invitation for invited users of an application — resendInvitation","text":"Resend invitation invited users application","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/resendInvitation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resend invitation for invited users of an application — resendInvitation","text":"","code":"resendInvitation(   invite,   regenerate = FALSE,   appDir = getwd(),   appName = NULL,   account = NULL,   server = NULL )"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/resendInvitation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resend invitation for invited users of an application — resendInvitation","text":"invite invitation resend. Can id email address. regenerate Regenerate invite code. Can helpful invitation expired. appDir Directory containing application. Defaults current working directory. appName Name application. account, server Uniquely identify remote server either user account, server name, . neither supplied, multiple options, prompted pick one. Use accounts() see full list available options.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/resendInvitation.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Resend invitation for invited users of an application — resendInvitation","text":"function works ShinyApps servers.","code":""},{"path":[]},{"path":"https://rstudio.github.io/rsconnect/dev/reference/restartApp.html","id":null,"dir":"Reference","previous_headings":"","what":"Restart an Application — restartApp","title":"Restart an Application — restartApp","text":"Restart application currently running remote server.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/restartApp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Restart an Application — restartApp","text":"","code":"restartApp(appName, account = NULL, server = NULL, quiet = FALSE)"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/restartApp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Restart an Application — restartApp","text":"appName Name application restart account Account name. single account registered system parameter can omitted. server Server name. Required use account name multiple servers (see servers()) quiet Request status information printed console operation.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/restartApp.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Restart an Application — restartApp","text":"function works ShinyApps servers.","code":""},{"path":[]},{"path":"https://rstudio.github.io/rsconnect/dev/reference/restartApp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Restart an Application — restartApp","text":"","code":"if (FALSE) { # \\dontrun{  # restart an application restartApp(\"myapp\") } # }"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/rpubsUpload.html","id":null,"dir":"Reference","previous_headings":"","what":"Upload a file to RPubs — rpubsUpload","title":"Upload a file to RPubs — rpubsUpload","text":"function publishes file rpubs.com. upload succeeds list includes id continueUrl returned. browser opened continueUrl complete publishing document. error occurs diagnostic message returned error element list.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/rpubsUpload.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upload a file to RPubs — rpubsUpload","text":"","code":"rpubsUpload(title, contentFile, originalDoc, id = NULL, properties = list())"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/rpubsUpload.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upload a file to RPubs — rpubsUpload","text":"title title document. contentFile path content file upload. originalDoc document rendered produce contentFile. May NULL document known. id upload update existing document id parameter specify document id update. Note id provided element list returned successful calls rpubsUpload. properties named list containing additional document properties (RPubs currently expect additional properties, parameter reserved future use).","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/rpubsUpload.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upload a file to RPubs — rpubsUpload","text":"named list. upload successful list contains id element can used subsequently update document well continueUrl element provides URL browser opened order complete publishing document. upload fails list contains error element contains explanation error occurred.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/rpubsUpload.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upload a file to RPubs — rpubsUpload","text":"","code":"if (FALSE) { # \\dontrun{ # upload a document result <- rpubsUpload(\"My document title\", \"Document.html\") if (!is.null(result$continueUrl))    browseURL(result$continueUrl) else    stop(result$error)  # update the same document with a new title updateResult <- rpubsUpload(\"My updated title\", \"Document.html\",                             id = result$id) } # }"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/rsconnect-package.html","id":null,"dir":"Reference","previous_headings":"","what":"rsconnect: Deploy Docs, Apps, and APIs to 'Posit Connect', 'shinyapps.io', and 'RPubs' — rsconnect-package","title":"rsconnect: Deploy Docs, Apps, and APIs to 'Posit Connect', 'shinyapps.io', and 'RPubs' — rsconnect-package","text":"Programmatic deployment interface 'RPubs', 'shinyapps.io', 'Posit Connect'. Supported content types include R Markdown documents, Shiny applications, Plumber APIs, plots, static web content.","code":""},{"path":[]},{"path":"https://rstudio.github.io/rsconnect/dev/reference/rsconnect-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"rsconnect: Deploy Docs, Apps, and APIs to 'Posit Connect', 'shinyapps.io', and 'RPubs' — rsconnect-package","text":"Maintainer: Aron Atkins aron@posit.co Authors: Toph Allen Hadley Wickham Jonathan McPherson JJ Allaire contributors: Posit Software, PBC [copyright holder, funder]","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/rsconnectConfigDir.html","id":null,"dir":"Reference","previous_headings":"","what":"rsconnect Configuration Directory — rsconnectConfigDir","title":"rsconnect Configuration Directory — rsconnectConfigDir","text":"Forms path location disk user-level configuration data package stored.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/rsconnectConfigDir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rsconnect Configuration Directory — rsconnectConfigDir","text":"","code":"rsconnectConfigDir(subDir = NULL)"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/rsconnectConfigDir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rsconnect Configuration Directory — rsconnectConfigDir","text":"subDir optional subdirectory included last element path.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/rsconnectConfigDir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rsconnect Configuration Directory — rsconnectConfigDir","text":"path configuration directory.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/rsconnectPackages.html","id":null,"dir":"Reference","previous_headings":"","what":"Using Packages with rsconnect — rsconnectPackages","title":"Using Packages with rsconnect — rsconnectPackages","text":"See ?appDependencies()","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/rsconnectProxies.html","id":null,"dir":"Reference","previous_headings":"","what":"HTTP Proxy Configuration — rsconnectProxies","title":"HTTP Proxy Configuration — rsconnectProxies","text":"Please see vignette(\"custom-http\").","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/servers.html","id":null,"dir":"Reference","previous_headings":"","what":"Server metadata — servers","title":"Server metadata — servers","text":"servers() lists known servers; serverInfo() gets metadata specific server. Cloud servers shinyapps.io posit.cloud always automatically registered available.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/servers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server metadata — servers","text":"","code":"servers(local = FALSE)  serverInfo(name = NULL)"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/servers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server metadata — servers","text":"local Return local servers? (.e. automatically registered cloud servers) name Server name. omitted, prompted pick server.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/servers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Server metadata — servers","text":"servers() returns data frame registered server names URLs. serverInfo() returns list details particular server.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/servers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Server metadata — servers","text":"","code":"# List all registered servers servers() #>           name                         url          certificate #> 1 shinyapps.io https://api.shinyapps.io/v1 Amazon... (redacted) #> 2  posit.cloud  https://api.posit.cloud/v1 Amazon... (redacted)  # Get information about a server serverInfo(\"posit.cloud\") #> $name #> [1] \"posit.cloud\" #>  #> $url #> [1] \"https://api.posit.cloud/v1\" #>  #> $certificate #> [1] \"Amazon... (redacted)\" #>"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/setAccountInfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Register account on shinyapps.io or posit.cloud — setAccountInfo","title":"Register account on shinyapps.io or posit.cloud — setAccountInfo","text":"Configure ShinyApps Posit Cloud account publishing system.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/setAccountInfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Register account on shinyapps.io or posit.cloud — setAccountInfo","text":"","code":"setAccountInfo(name, token, secret, server = \"shinyapps.io\")"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/setAccountInfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Register account on shinyapps.io or posit.cloud — setAccountInfo","text":"name Name account save remove token User token account secret User secret account server Server associate account .","code":""},{"path":[]},{"path":"https://rstudio.github.io/rsconnect/dev/reference/setAccountInfo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Register account on shinyapps.io or posit.cloud — setAccountInfo","text":"","code":"if (FALSE) { # \\dontrun{  # register an account setAccountInfo(\"user\", \"token\", \"secret\")  # remove the same account removeAccount(\"user\") } # }"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/setProperty.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Application property — setProperty","title":"Set Application property — setProperty","text":"Set property currently deployed ShinyApps application.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/setProperty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Application property — setProperty","text":"","code":"setProperty(   propertyName,   propertyValue,   appPath = getwd(),   appName = NULL,   account = NULL,   server = NULL,   force = FALSE )"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/setProperty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Application property — setProperty","text":"propertyName Name property propertyValue Property value appPath Directory file deployed. Defaults current working directory. appName Name application account, server Uniquely identify remote server either user account, server name, . neither supplied, multiple options, prompted pick one. Use accounts() see full list available options. force Forcibly set property","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/setProperty.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Set Application property — setProperty","text":"function works ShinyApps servers.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/setProperty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set Application property — setProperty","text":"","code":"if (FALSE) { # \\dontrun{  # set instance size for an application setProperty(\"application.instances.count\", 1)  # disable application package cache setProperty(\"application.package.cache\", FALSE)  } # }"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/showInvited.html","id":null,"dir":"Reference","previous_headings":"","what":"List invited users for an application — showInvited","title":"List invited users for an application — showInvited","text":"List invited users application","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/showInvited.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List invited users for an application — showInvited","text":"","code":"showInvited(appDir = getwd(), appName = NULL, account = NULL, server = NULL)"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/showInvited.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List invited users for an application — showInvited","text":"appDir Directory containing application. Defaults current working directory. appName Name application. account, server Uniquely identify remote server either user account, server name, . neither supplied, multiple options, prompted pick one. Use accounts() see full list available options.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/showInvited.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"List invited users for an application — showInvited","text":"function works ShinyApps servers.","code":""},{"path":[]},{"path":"https://rstudio.github.io/rsconnect/dev/reference/showLogs.html","id":null,"dir":"Reference","previous_headings":"","what":"Application Logs — showLogs","title":"Application Logs — showLogs","text":"functions provide access logs deployed ShinyApps applications: showLogs() displays logs. getLogs() returns logged lines.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/showLogs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Application Logs — showLogs","text":"","code":"showLogs(   appPath = getwd(),   appFile = NULL,   appName = NULL,   account = NULL,   server = NULL,   entries = 50,   streaming = FALSE )  getLogs(   appPath = getwd(),   appFile = NULL,   appName = NULL,   account = NULL,   server = NULL,   entries = 50 )"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/showLogs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Application Logs — showLogs","text":"appPath path directory file deployed. appFile path R source file contains application (single file applications). appName name application show logs . May omitted one application deployment made appPath. account account application deployed. May omitted one account registered system. server Server name. Required use account name multiple servers. entries number log entries show. Defaults 50 entries. streaming Whether stream logs. TRUE, function return; instead, log entries written console made, R interrupted. Defaults FALSE.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/showLogs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Application Logs — showLogs","text":"getLogs() returns data frame containing logged lines.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/showLogs.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Application Logs — showLogs","text":"functions use libcurl transport, work applications deployed ShinyApps.io.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/showMetrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Show Application Metrics — showMetrics","title":"Show Application Metrics — showMetrics","text":"Show application metrics currently deployed application. function works ShinyApps servers.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/showMetrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show Application Metrics — showMetrics","text":"","code":"showMetrics(   metricSeries,   metricNames,   appDir = getwd(),   appName = NULL,   account = NULL,   server = \"shinyapps.io\",   from = NULL,   until = NULL,   interval = NULL )"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/showMetrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show Application Metrics — showMetrics","text":"metricSeries Metric series query. Refer shinyapps.io documentation available series. metricNames Metric names series query. Refer shinyapps.io documentation available metrics. appDir directory containing application (e.g. Shiny app plumber API). Defaults current directory. appName Application name, string consisting letters, numbers, _ -. application name used identify applications server, must unique. specified, first deployment automatically appDir directory website, appPrimaryDoc document. subsequent deploys, use previously stored value. account, server Uniquely identify remote server either user account, server name, . neither supplied, multiple options, prompted pick one. Use accounts() see full list available options. Date range starting timestamp (Unix timestamp relative time delta \"2d\" \"3w\"). Date range ending timestamp (Unix timestamp relative time delta \"2d\" \"3w\"). interval Summarization interval. Data points intervals less grouped. (Relative time delta e.g. \"120s\" \"1h\" \"30d\").","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/showProperties.html","id":null,"dir":"Reference","previous_headings":"","what":"Show Application property — showProperties","title":"Show Application property — showProperties","text":"Show properties application deployed ShinyApps.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/showProperties.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show Application property — showProperties","text":"","code":"showProperties(   appPath = getwd(),   appName = NULL,   account = NULL,   server = NULL )"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/showProperties.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show Application property — showProperties","text":"appPath Directory file deployed. Defaults current working directory. appName Name application account, server Uniquely identify remote server either user account, server name, . neither supplied, multiple options, prompted pick one. Use accounts() see full list available options.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/showProperties.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Show Application property — showProperties","text":"function works ShinyApps servers.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/showUsage.html","id":null,"dir":"Reference","previous_headings":"","what":"Show Application Usage — showUsage","title":"Show Application Usage — showUsage","text":"Show application usage currently deployed application","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/showUsage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show Application Usage — showUsage","text":"","code":"showUsage(   appDir = getwd(),   appName = NULL,   account = NULL,   server = NULL,   usageType = \"hours\",   from = NULL,   until = NULL,   interval = NULL )"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/showUsage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show Application Usage — showUsage","text":"appDir Directory containing application. Defaults current working directory. appName Name application account, server Uniquely identify remote server either user account, server name, . neither supplied, multiple options, prompted pick one. Use accounts() see full list available options. usageType Use metric retreive (example: \"hours\") Date range starting timestamp (Unix timestamp relative time delta \"2d\" \"3w\"). Date range ending timestamp (Unix timestamp relative time delta \"2d\" \"3w\"). interval Summarization interval. Data points intervals less grouped. (Relative time delta e.g. \"120s\" \"1h\" \"30d\").","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/showUsage.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Show Application Usage — showUsage","text":"function works ShinyApps servers.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/showUsers.html","id":null,"dir":"Reference","previous_headings":"","what":"List authorized users for an application — showUsers","title":"List authorized users for an application — showUsers","text":"List authorized users application","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/showUsers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List authorized users for an application — showUsers","text":"","code":"showUsers(appDir = getwd(), appName = NULL, account = NULL, server = NULL)"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/showUsers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List authorized users for an application — showUsers","text":"appDir Directory containing application. Defaults current working directory. appName Name application. account, server Uniquely identify remote server either user account, server name, . neither supplied, multiple options, prompted pick one. Use accounts() see full list available options.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/showUsers.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"List authorized users for an application — showUsers","text":"function works ShinyApps servers.","code":""},{"path":[]},{"path":"https://rstudio.github.io/rsconnect/dev/reference/syncAppMetadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Update deployment records — syncAppMetadata","title":"Update deployment records — syncAppMetadata","text":"Update deployment records applications published Posit Connect. updates application title URL, deletes records deployments application deleted server.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/syncAppMetadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update deployment records — syncAppMetadata","text":"","code":"syncAppMetadata(appPath = \".\")"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/syncAppMetadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update deployment records — syncAppMetadata","text":"appPath path directory file deployed.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/taskLog.html","id":null,"dir":"Reference","previous_headings":"","what":"Show task log — taskLog","title":"Show task log — taskLog","text":"Writes task log given task","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/taskLog.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show task log — taskLog","text":"","code":"taskLog(taskId, account = NULL, server = NULL, output = NULL)"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/taskLog.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show task log — taskLog","text":"taskId Task Id account, server Uniquely identify remote server either user account, server name, . neither supplied, multiple options, prompted pick one. Use accounts() see full list available options. output write output. Valid values NULL stderr","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/taskLog.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Show task log — taskLog","text":"function works shinyapps.io posit.cloud.","code":""},{"path":[]},{"path":"https://rstudio.github.io/rsconnect/dev/reference/taskLog.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show task log — taskLog","text":"","code":"if (FALSE) { # \\dontrun{  # write task log to stdout taskLog(12345)  # write task log to stderr taskLog(12345, output=\"stderr\")  } # }"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/tasks.html","id":null,"dir":"Reference","previous_headings":"","what":"List Tasks — tasks","title":"List Tasks — tasks","text":"List Tasks","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/tasks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Tasks — tasks","text":"","code":"tasks(account = NULL, server = NULL)"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/tasks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Tasks — tasks","text":"account, server Uniquely identify remote server either user account, server name, . neither supplied, multiple options, prompted pick one. Use accounts() see full list available options.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/tasks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Tasks — tasks","text":"Returns data frame following columns:","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/tasks.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"List Tasks — tasks","text":"function works shinyapps.io posit.cloud.","code":""},{"path":[]},{"path":"https://rstudio.github.io/rsconnect/dev/reference/tasks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List Tasks — tasks","text":"","code":"if (FALSE) { # \\dontrun{  # list tasks for the default account tasks()  } # }"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/terminateApp.html","id":null,"dir":"Reference","previous_headings":"","what":"Terminate an Application — terminateApp","title":"Terminate an Application — terminateApp","text":"Terminate archive currently deployed ShinyApps application.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/terminateApp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Terminate an Application — terminateApp","text":"","code":"terminateApp(appName, account = NULL, server = NULL, quiet = FALSE)"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/terminateApp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Terminate an Application — terminateApp","text":"appName Name application terminate account Account name. single account registered system parameter can omitted. server Server name. Required use account name multiple servers (see servers()) quiet Request status information printed console termination.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/terminateApp.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Terminate an Application — terminateApp","text":"function works ShinyApps servers.","code":""},{"path":[]},{"path":"https://rstudio.github.io/rsconnect/dev/reference/terminateApp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Terminate an Application — terminateApp","text":"","code":"if (FALSE) { # \\dontrun{  # terminate an application terminateApp(\"myapp\") } # }"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/unsetProperty.html","id":null,"dir":"Reference","previous_headings":"","what":"Unset Application property — unsetProperty","title":"Unset Application property — unsetProperty","text":"Unset property currently deployed ShinyApps application (restoring default value)","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/unsetProperty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unset Application property — unsetProperty","text":"","code":"unsetProperty(   propertyName,   appPath = getwd(),   appName = NULL,   account = NULL,   server = NULL,   force = FALSE )"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/unsetProperty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unset Application property — unsetProperty","text":"propertyName Name property appPath Directory file deployed. Defaults current working directory. appName Name application account, server Uniquely identify remote server either user account, server name, . neither supplied, multiple options, prompted pick one. Use accounts() see full list available options. force Forcibly unset property","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/unsetProperty.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Unset Application property — unsetProperty","text":"function works ShinyApps servers.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/unsetProperty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unset Application property — unsetProperty","text":"","code":"if (FALSE) { # \\dontrun{  # unset application package cache property to revert to default unsetProperty(\"application.package.cache\")  } # }"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/writeManifest.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a manifest.json — writeManifest","title":"Create a manifest.json — writeManifest","text":"Use writeManifest() generate manifest.json. Among things, can commit file git activate Git-Backed content Posit Connect. manifest.json contains list files app along dependencies, need re-run writeManifest() either change.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/reference/writeManifest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a manifest.json — writeManifest","text":"","code":"writeManifest(   appDir = getwd(),   appFiles = NULL,   appFileManifest = NULL,   appPrimaryDoc = NULL,   appMode = NULL,   contentCategory = NULL,   python = NULL,   forceGeneratePythonEnvironment = FALSE,   quarto = NA,   image = NULL,   envManagement = NULL,   envManagementR = NULL,   envManagementPy = NULL,   verbose = FALSE,   quiet = FALSE )"},{"path":"https://rstudio.github.io/rsconnect/dev/reference/writeManifest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a manifest.json — writeManifest","text":"appDir directory containing application (e.g. Shiny app plumber API). Defaults current directory. appFiles, appFileManifest Use appFiles specify character vector files bundle app appFileManifest provide path file containing list files. neither supplied, bundle files appDir, apart standard exclusions files listed .rscignore file. See listDeploymentFiles() details. appPrimaryDoc application contains one document, parameter indicates primary one, path relative appDir. Can NULL, case primary document inferred contents deployed. appMode Optional; type content deployed. Provide option inferred type content incorrect. can happen, example, static HTML content includes downloadable Shiny application app.R. Accepted values include \"shiny\", \"api\", \"rmd-static\", \"rmd-shiny\", \"quarto-static\", \"quarto-shiny\", \"static\". Posit Connect API Reference contains full set available values. servers support types content. contentCategory Set \"site\" deploy deploySite(); otherwise leave . python Full path python binary use reticulate. Required reticulate dependency app deployed. python = NULL, RETICULATE_PYTHON RETICULATE_PYTHON_FALLBACK set environment, value used. specified python binary invoked determine version list python packages installed environment. forceGeneratePythonEnvironment Optional. existing requirements.txt file found, overwritten argument TRUE. quarto deployed content built quarto? (TRUE, FALSE, NA). default, NA, use quarto .qmd files bundle, _quarto.yml .Rmd files. (option ignored quarto always used metadata contains quarto_version quarto_engines fields.) image Optional. name image use building executing content. none provided, Posit Connect attempt choose image based content requirements. can override default setting environment variable RSCONNECT_IMAGE. envManagement Optional. Posit Connect install R Python packages content? (TRUE, FALSE, NULL). default, NULL, write values bundle manifest, Connect fall back application default environment management strategy, server default application default defined. (option shorthand flag overwrites values envManagementR envManagementPy.) envManagementR Optional. Posit Connect install R packages content? (TRUE, FALSE, NULL). default, NULL, write values bundle manifest, Connect fall back application default R environment management strategy, server default application default defined. (option ignored envManagement non-NULL.) envManagementPy Optional. Posit Connect install Python packages content? (TRUE, FALSE, NULL). default, NULL, write values bundle manifest, Connect fall back application default Python environment management strategy, server default application default defined. (option ignored envManagement non-NULL.) verbose TRUE, prints detailed progress messages. quiet FALSE, prints progress messages.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/news/index.html","id":"rsconnect-development-version","dir":"Changelog","previous_headings":"","what":"rsconnect (development version)","title":"rsconnect (development version)","text":"rsconnect now sets rsconnect.max.bundle.size rsconnect.max.bundle.files options default values startup yet set. (#1204) Increase default rsconnect.max.bundle.size limit 5 GiB. (#1200) getLogs() returns log lines shinyapps.io hosted application. (#1209) target Python binary included Python environment inspection errors. (#1207) Improved documentation advice deployApp(envVars...).","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/news/index.html","id":"rsconnect-151","dir":"Changelog","previous_headings":"","what":"rsconnect 1.5.1","title":"rsconnect 1.5.1","text":"CRAN release: 2025-08-28 Address user registration Posit Connect deployments hosted Snowpark Container Services one configured Snowflake connection. (#1189) Process cookie expiration dates addition cookie max-age. servers return already-expired cookies. (1187) Removed unused internal methods Connect client. (#1182)","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/news/index.html","id":"rsconnect-150","dir":"Changelog","previous_headings":"","what":"rsconnect 1.5.0","title":"rsconnect 1.5.0","text":"CRAN release: 2025-06-26 Functions interacting Posit Connect deployments Snowpark Container Services now provided snowflakeauth package.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/news/index.html","id":"rsconnect-142","dir":"Changelog","previous_headings":"","what":"rsconnect 1.4.2","title":"rsconnect 1.4.2","text":"CRAN release: 2025-06-18 Address duplicate certificate errors macOS newer curl. (#1175)","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/news/index.html","id":"rsconnect-141","dir":"Changelog","previous_headings":"","what":"rsconnect 1.4.1","title":"rsconnect 1.4.1","text":"CRAN release: 2025-05-22 Fixed processing error server validation, prevented registration new Connect accounts. (#1166) waiting initial Connect account authorization, allow HTTP 401 responses. (#1167)","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/news/index.html","id":"rsconnect-140","dir":"Changelog","previous_headings":"","what":"rsconnect 1.4.0","title":"rsconnect 1.4.0","text":"CRAN release: 2025-05-15 Content directories period name longer treated document path computing location deployment records. (#1138) Quarto documents specify server must include executable code engine declaration. (#1145) Fixed errors analyzing Quarto documents containing long chunks. (#1114) _server.yml file indicates content API. (#1144) Expand tilde resolving rsconnect.ca.bundle option. (#1152) Added support interaction Posit Connect deployments hosted Snowpark Container Services. Introduced detection required R interpreter version based DESCRIPTION file renv.lock file. setting inserted manifest environment.r.requires. Introduced detection required Python interpreter version based project files .python-version, pyproject.toml setup.cfg. setting inserted manifest environment.python.requires.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/news/index.html","id":"rsconnect-134","dir":"Changelog","previous_headings":"","what":"rsconnect 1.3.4","title":"rsconnect 1.3.4","text":"CRAN release: 2025-01-22 Use base64 encoded test data. Addresses CRAN test failures run newer libssl. (#1130)","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/news/index.html","id":"rsconnect-133","dir":"Changelog","previous_headings":"","what":"rsconnect 1.3.3","title":"rsconnect 1.3.3","text":"CRAN release: 2024-11-19 Avoid “legacy” time zone names tests, available default environments. Addresses CRAN test failures. (#1115)","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/news/index.html","id":"rsconnect-132","dir":"Changelog","previous_headings":"","what":"rsconnect 1.3.2","title":"rsconnect 1.3.2","text":"CRAN release: 2024-10-28 Primary Quarto document detection considers .R, .Rmd, .qmd end--file extensions. Previously, file .R elsewhere name, .Rprofile, incorrectly considered. (#1106) Use repository name identified renv available.packages() enumerate package, occurs archived packages. (#1110) Remove remaining directory layout validation check. (#1102) Use public Connect server API endpoint /v1/tasks/{id} poll task progress. (#1088)","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/news/index.html","id":"rsconnect-131","dir":"Changelog","previous_headings":"","what":"rsconnect 1.3.1","title":"rsconnect 1.3.1","text":"CRAN release: 2024-06-04 Skip tests packages “foreign” “MASS” available. (#1081)","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/news/index.html","id":"rsconnect-130","dir":"Changelog","previous_headings":"","what":"rsconnect 1.3.0","title":"rsconnect 1.3.0","text":"CRAN release: 2024-05-24 deployApp(logLevel = \"quiet\") suppresses Posit Connect deployment task output. (#1051) deployApp(logLevel = \"quiet\") writeManifest(quiet=TRUE) suppress output using renv analyze dependencies. (#1051) deployApp() writeManifest() receive default value image argument RSCONNECT_IMAGE environment variable. (#1063) deployTF() can deploy TensorFlow model Posit Connect. Requires Posit Connect 2024.05.0 higher. Skip tests suggested packages available. Skip Quarto tests run CRAN. (#1074)","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/news/index.html","id":"rsconnect-122","dir":"Changelog","previous_headings":"","what":"rsconnect 1.2.2","title":"rsconnect 1.2.2","text":"CRAN release: 2024-04-04 Use internally computed SHA1 sums PKI signing SHA1 disabled FIPS mode. (#768, #1054) Allow Quarto content rendered script primary target. (#1055)","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/news/index.html","id":"rsconnect-121","dir":"Changelog","previous_headings":"","what":"rsconnect 1.2.1","title":"rsconnect 1.2.1","text":"CRAN release: 2024-01-31 Restore LC_TIME locale computing RFC-2616 date. (#1035) Address problem inspecting Quarto content file names paths needed quoted. resulting manifest lacked information Quarto runtime, caused difficult--understand deployment errors. (#1037) Produce error Quarto content inspected. (#1032)","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/news/index.html","id":"rsconnect-120","dir":"Changelog","previous_headings":"","what":"rsconnect 1.2.0","title":"rsconnect 1.2.0","text":"CRAN release: 2023-12-15 Addressed number republishing collaboration issues content incorrectly published new location rather reusing existing deployment. (#981, #1007, #1013, #1019) showLogs(), configureApp(), setProperty(), unsetProperty() search application name matching deployment records. (#985, #989) rpubsUpload() correctly records initial RPubs destination, allowing republishing. (#976) deployApp() friends record multi-value metadata entries comma-separated values. (#1017) accountInfo() includes name username fields. Older versions rsconnect store account records username field. Recent rsconnect versions record name. name username contain value. (#1024)","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/news/index.html","id":"rsconnect-111","dir":"Changelog","previous_headings":"","what":"rsconnect 1.1.1","title":"rsconnect 1.1.1","text":"CRAN release: 2023-10-04 Added space parameter deploy directly space Posit Cloud. Improve reporting errors returned shinyapps.io. (#997) Remove directory layout validation checks. (#998) use getOption(\"available_packages_filters\") option calling available.packages(). (#1002) Packages installed source within renv project associated repositories. (#1004)","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/news/index.html","id":"rsconnect-110","dir":"Changelog","previous_headings":"","what":"rsconnect 1.1.0","title":"rsconnect 1.1.0","text":"CRAN release: 2023-09-05 Fixed analysis directories smaller rsconnect.max.bundle.files=10000 limit larger renv.config.dependencies.limit=1000 limit. (#968) Ignore .env, .venv, venv files reference Python virtual environments. (#972) deployApp() writeManifest() accept optional envManagement, envManagementR, envManagementPy arguments. args specify whether Posit Connect install packages package cache. envManagement FALSE Connect perform package installation administrator’s responsibility ensure required R/Python packages available runtime environment. especially useful -host execution enabled, execution environment (specified image argument) already contains required packages. values ignored Applications.ManifestEnvironmentManagementSelection = false. Requires Posit Connect >=2023.07.0. (#977) Fix account discovery showProperties(). (#980)","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/news/index.html","id":"rsconnect-102","dir":"Changelog","previous_headings":"","what":"rsconnect 1.0.2","title":"rsconnect 1.0.2","text":"CRAN release: 2023-08-17 Fixed redeployments shinyapps.io appName provided, local record deployment exists. (#932) deployApp() writeManifest() now error library renv.lock --sync. Previously always used defined renv.lock () slow (b) lead different results see running locally (#930). Deploying renv project includes renv.lock bundle. manifest created renv project references renv.lock manifest.json. (#926) Use environment variable RSCONNECT_PACKRAT analyze dependencies using packrat, done prior rsconnect-1.0.0. Use rsconnect.packrat option discouraged, effective using push-button deployment RStudio IDE. (#935) renv.lock ignored RSCONNECT_PACKRAT environment variable rsconnect.packrat option set. (#936) content type inferred analyzing set top-level files. (#942) deployApp() writeManifest() accept optional appMode argument. Provide argument project includes auxiliary files mislead existing appMode inference. example, HTML project includes downloadable Shiny app.R, content assumed Shiny application even application meant run. (#948) appDependencies() accepts appFileManifest argument alternate way providing target set files.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/news/index.html","id":"rsconnect-101","dir":"Changelog","previous_headings":"","what":"rsconnect 1.0.1","title":"rsconnect 1.0.1","text":"CRAN release: 2023-07-20 deployDoc() includes .Rprofile, requirements.txt renv.lock deploying .Rmd .qmd. additional files included rendered HTML documents. (#919) Explicit renv dependencies preserved. (#916)","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/news/index.html","id":"rsconnect-100","dir":"Changelog","previous_headings":"","what":"rsconnect 1.0.0","title":"rsconnect 1.0.0","text":"CRAN release: 2023-07-17","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/news/index.html","id":"new-features-1-0-0","dir":"Changelog","previous_headings":"","what":"New features","title":"rsconnect 1.0.0","text":"deployApp() deployDoc() now support deploying static content Posit Cloud. Static RMarkdown Quarto content can rendered server-side. rsconnect requires renv 1.0.0. deployApp() writeManifest() now respect renv lock files, present. don’t want use lockfiles, instead return previous behaviour snapshotting every deploy, add renv.lock .rscignore (#671). Learn ?appDependencies(). Additionally, deployApp() writeManifest() now use renv capture app dependencies, rather packrat. causes previously working deploy fail, please file issue set options(rsconnect.packrat = TRUE) revert previous behaviour. deployApp()’s quarto argument now takes values TRUE, FALSE NA. previous value (path quarto binary) now ignored, instead automatically figure package QUARTO_PATH PATH env vars (#658). deploySite() now supports quarto websites (#813). deployApp() gains new envVars argument takes vector names environment variables securely copied server. names (values) environment variables also saved deployment record updated time re-deploy app (#667). currently works Connect, hope add support Posit cloud shinyapps.io future. rsconnect gains two new functions understanding updating environment variables apps currently use. listServerEnvVars() return data frame applications, envVars list-column giving names environment variables used application. updateServerEnvVars() update applications use specific environment variable current value environment variable (#667).","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/news/index.html","id":"lifecycle-changes-1-0-0","dir":"Changelog","previous_headings":"","what":"Lifecycle changes","title":"rsconnect 1.0.0","text":"Non-libcurl rsconnect.http options deprecated. allows us focus efforts single backend, rather spreading development efforts across five. old backends remain available least 2 years, using libcurl doesn’t work , please report problem ASAP can fix . addConnectServer() deprecated thing addServer() now addServer() also validates URLs. deployTFModel() defunct. Posit Connect longer supports hosting TensorFlow Model APIs. TensorFlow model can deployed Plumber API, Shiny application, supported content type. discoverServer() deprecated; never worked. deployApp(\"foo.Rmd\") deprecated. never documented, job deployDoc() (#698).","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/news/index.html","id":"minor-improvements-and-bug-fixes-1-0-0","dir":"Changelog","previous_headings":"","what":"Minor improvements and bug fixes","title":"rsconnect 1.0.0","text":"New rsconnect.http.headers rsconnect.http.cookies allow set extra arbitrary additional headers/cookies request (#405). use documented new vignette(\"custom-http\"). Uploading large files RPubs works (#450). recording details deployments Posit Cloud, appId now represents content id (seen URLs format https://posit.cloud/content/{id}) instead application id. Deployment records longer contain time app deployed () ’s metadata last synced (lastSyncTime) variables useful, lead uninteresting diffs committed deployment records git (#770). version field added deployment DCF files facilitate future file format changes, needed. value release 1., accounts() returns zero-row data frame accounts registered. accountInfo() removeAccount() longer require account supplied (#666). accountInfo() servers() redact sensitive information (secrets, private keys, certificates) make hard accidentally reveal information logs (#675). addServer() includes port default server name, present. appDependencies() includes implicit dependencies, returns additional column giving Repository (#670). documentation contains information dependency discovery works, can control , needed. applications() now returns application title, available (#484), processes multiple pages results Connect server (#860). connectApiUser() now clearly requires apiKey (#741). deployApp() output thoroughly reviewed tweaked. well general polish now gives information discovered deployment, like app name, account & server, files included bundle (#669). deployApp() aggressive saving deployment data, make less likely need repeat failed deployment. particular, now saves uploading contents (#677) saves ’re updating content originally created someone else (#270). deployApp() now gives actionable error attempt set visibility app deployed posit.cloud (#838). deployApp() now uses stricter policy determining whether locally installed package can successfully installed deployment server. means ’re likely get clean failure prior deployment (#659). deployApp() now detect ’re attempting publish app deleted prompt create new app (#226). deployApp() includes new conveniences large uploads including reporting size bundle ’re uploading showing progress bar interactive sessions (#754). deployApp() now follows redirects, make robust server moving new url (#674). deployApp() uses simpler logic determining whether create new app update existing app. Now appName, account, server used find existing deployments. none found, create new deployment; one found, ’ll updated; one found, prompt disambiguate (#666). deployApp() improves account resolution account server arguments giving specific recommendations values might use case ambiguity lack matches (#666). Additionally, ’ll now receive clear error accidentally provide something string NULL arguments. deployApp() now generates interactive prompt select account/server (previous deployments) appName/account/server (multiple previous deployments) (#691). deployApp() now advertises startup scripts run normal logLevel, evaluates script environment (#542). deployApp() now derives appName appDir appPrimaryDoc, never using title (#538). now simplifies path publishing shinyapps.io, since restrictions application names much tighter Posit Connect. deployApp() now warn appFiles appManifestFiles contain files don’t exist, rather silently ignoring (#706). deployApp() excludes temporary backup files (names starting ending ~) automatically determining files bundle (#111) well directories likely Python virtual environments (#632). Additionally, ignore rules always now applied directories; previously (like .Rproj.user \"manifest.json\") applied root directory. correctly handles .rscignore files (.e. documented) (#568). deployApp(appSourceDoc) deprecated; job recordDir. deployDoc() includes .Rprofile bundle, one found directory document. lint() fewer false positives path problems: relative path linter removed (#244) case-sensitive linter now checks strings containing / (#611). New listDeploymentFiles(), supsersedes listBundleFiles(). now errors bundle either large contains many files, rather silently truncating (#684). serverInfo() removeServer() longer require server called interactively. showMetrics() returns correctly named data frame (#528). Removed Rmd generation code (writeRmdIndex()) worked, necessary, quite time (#106, #109). Locale detection improved windows (#233). rsconnect.pre.deploy rsconnect.post.deploy hooks now always called content directory, sometimes path specific file (#696). Functions interact shinyapps.io enforce server type. Updated addAuthorizedUser(), removeAuthorizedUser(), showUsers(), showInvited(), resendInvitation(), configureApp(), setProperty(), unsetProperty(), purgeApp(), restartApp(), terminateApp(), showUsage(), showMetrics() (#863, #864). needed packages installed, ’re interactive environment, rsconnect now prompt install (#665). confirmation prompt presented upon lint failures indicates “” default. (#652)","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/news/index.html","id":"rsconnect-0829","dir":"Changelog","previous_headings":"","what":"rsconnect 0.8.29","title":"rsconnect 0.8.29","text":"CRAN release: 2023-01-09 Introduced support publishing Posit Cloud. feature currently closed beta requires access enabled account Posit Cloud. See Posit Cloud’s Announcement information request access. Update company product names rebranding Posit.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/news/index.html","id":"rsconnect-0828","dir":"Changelog","previous_headings":"","what":"rsconnect 0.8.28","title":"rsconnect 0.8.28","text":"CRAN release: 2022-10-24 Shiny applications Shiny documents longer include implicit dependency ragg package present local environment. reverts change introduced 0.8.27. Shiny applications add explicit dependency ragg (usually library(\"ragg\") statement) see used shiny::renderPlot (via shiny::plotPNG). documentation shiny::plotPNG explains use ragg. (#598) Fix bug prevented publishing writing manifests non-Quarto content Quarto path provided quarto argument writeManifest(), deployApp(), related functions. Escape account names performing directory search determine appropriate server. (#620)","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/news/index.html","id":"rsconnect-0827","dir":"Changelog","previous_headings":"","what":"rsconnect 0.8.27","title":"rsconnect 0.8.27","text":"CRAN release: 2022-07-12 Quarto content longer silently deploy R Markdown content Quarto metadata missing gathered. Functions error, requesting path Quarto binary quarto argument. (#594) Fix typo .rscignore. (#599) Quarto deployments specifying appDir quarto binary appPrimaryDoc work consistently. directory containing .qmd file deploy Quarto content instead failing, directory containing .Rmd file successfully deploy Quarto content instead falling back R Markdown. (#601) ragg package installed locally, now added implicit dependency shiny apps since shiny::renderPlot() now uses default (available). way, shiny apps won’t add library(ragg) get consistent (higher-quality) PNG images deployed. (#598)","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/news/index.html","id":"rsconnect-0826","dir":"Changelog","previous_headings":"","what":"rsconnect 0.8.26","title":"rsconnect 0.8.26","text":"CRAN release: 2022-05-31 Add ability resend shinyapps.io application invitations (#543) Show expiration status shinyapps.io invitations (#543) Allow shinyapps.io deployments private creation time (#403) Update minimum openssl version 2.0.0 enable publishing users FIPS-compliant systems without need API keys. (#452) Added Quarto support writeManifest, requires passing absolute path Quarto executable new quarto parameter Added quarto parameter deployApp enable deploying Quarto documents websites supplying path Quarto executable Added support deploying Quarto content uses jupyter runtime Added support selecting target image bundle manifest showLogs function takes server parameter. (#57) Added rsconnect.tar option, can used specify path tar implementation instead R’s internal implementation. previous method, using RSCONNECT_TAR environment variable, still works, new option take precedence set.","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/news/index.html","id":"rsconnect-0825","dir":"Changelog","previous_headings":"","what":"rsconnect 0.8.25","title":"rsconnect 0.8.25","text":"CRAN release: 2021-11-19 Use curl option -T uploading files avoid memory errors large files. (#544) rsconnect.max.bundle.size rsconnect.max.bundle.files options enforced processing enumerated set files. Previously, limits enforced bundling entire content directory. (#542) Preserve file time stamps copying files bundle staging directory, propagates created tar file. (#540) Configuration directories align CRAN policy use location named tools::R_user_dir. Configuration created earlier versions package automatically migrated new location. (#550)","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/news/index.html","id":"rsconnect-0824","dir":"Changelog","previous_headings":"","what":"rsconnect 0.8.24","title":"rsconnect 0.8.24","text":"CRAN release: 2021-08-05 Added support publishing Quarto documents websites Added support .rscignore file exclude files directories publishing (#368) Fixed issue causing missing value errors publishing content containing filenames extended characters (#514) Fixed issue preventing error tracebacks displaying (#518)","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/news/index.html","id":"rsconnect-0818","dir":"Changelog","previous_headings":"","what":"rsconnect 0.8.18","title":"rsconnect 0.8.18","text":"CRAN release: 2021-05-24 Fixed issue causing configuration directory left behind R CMD CHECK Fixed incorrect subdirectory nesting storing configuration R_USER_CONFIG_DIR Added linter different-case Markdown links (#388) Use new Packrat release CRAN, 0.6.0 (#501) Fix incorrect linter messages referring shiny.R instead server.R (#509) Warn, rather err, repository URL package dependency validated. allows deployment using archived CRAN packages, using packages installed source available server. (#508) Err app-mode inferred; seen empty directories/file-sets (#512) Add verbose option writeManifest utility (#468)","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/news/index.html","id":"rsconnect-0817","dir":"Changelog","previous_headings":"","what":"rsconnect 0.8.17","title":"rsconnect 0.8.17","text":"CRAN release: 2021-04-09 Fixed issue setting options(rsconnect.http.trace.json = TRUE) cause deployment errors HTTP transports (#490) Improve large bundles (file size count) detected (#464) RSCONNECT_TAR environment variable can used select tar implementation used create bundles (#446) Warn files owned users groups long names, can cause internal R tar implementation produce invalid archives (#446) Add support syncing deployment metadata server (#396) Insist ShinyApps accounts showUsers() (#398) Improve regex used browser browseURL lints include word boundary (#400) Fixed bug connectApiUser() set user id (#407) New arguments deployApp force generation Python environment file requirements.txt file (#409) Fail repository URL available dependent package (#410) Fix error old version package installed current version isn’t available (#431, #436) Fix error packages couldn’t found nonstandard contrib URLs. (#451, #457) Improve detection Shiny R Markdown files server.R present (#461) Fix failure write manifest package requires newer R version active version (#467) Increase default HTTP timeout non-Windows platforms (#476) Require packrat 0.5 later (#434) Fix error handling empty application / content lists (#417, #395) Calls writeManifest() longer reference packrat files generated manifest.json. packrat entries transient existed computing dependencies. (#472) Fix applications ShinyApps return size details (#496) GitLab seen valid SCM source (#491)","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/news/index.html","id":"rsconnect-0816","dir":"Changelog","previous_headings":"","what":"rsconnect 0.8.16","title":"rsconnect 0.8.16","text":"CRAN release: 2019-12-13 Prevent attempts deploy Connect applications without uploading (#145) Flag usage browser() debugging calls deploying (#196) Prevent accidental deployment Plumber APIs shinyapps.io (#204) Allow appId global deployment parameters deploySite (#231) Fix error running deployments() without registered accounts (#261) Omit renv files deployment bundle (#367) Fix failure deploy Packrat projects (#370) Fix issue deploying package exists multiple repos (#372) Honor RETICULATE_PYTHON writing manifests (#374) Add .failure user hook run function deployApp() fails (#375) Fix error showing non-streaming logs (#377) Use internally computed MD5 sums MD5 disabled FIPS mode (#378, #382) Make clearer log entries emitted RStudio Connect (#385) Add support requirements.txt Python, exists (#386) Restore compatibility R < 3.5 (#394) Add support authenticating Connect via API key rather token (#393)","code":""},{"path":"https://rstudio.github.io/rsconnect/dev/news/index.html","id":"rsconnect-0815","dir":"Changelog","previous_headings":"","what":"rsconnect 0.8.15","title":"rsconnect 0.8.15","text":"CRAN release: 2019-07-22 Switch RCurl curl default HTTP backend (#325) Add purgeApp() function purge previously deployed shinyapps.io applications (#352)","code":""}]
